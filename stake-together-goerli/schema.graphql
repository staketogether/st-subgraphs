type StakeTogether @entity {
  id: ID!

  accounts: [Account!]! @derivedFrom(field: "st")
  communities: [Community!]! @derivedFrom(field: "st")
  delegations: [Delegation!]! @derivedFrom(field: "st")

  ethBalance: BigInt!
  clBalance: BigInt!
  trBalance: BigInt!
  withdrawalsBalance: BigInt!

  totalShares: BigInt!
  totalDelegatedShares: BigInt!

  totalPooledEther: BigInt!
  totalSupply: BigInt!

  stakeTogetherFeeRecipient: Bytes
  operatorFeeRecipient: Bytes

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Account @entity {
  id: ID!
  st: StakeTogether!

  address: Bytes!
  shares: BigInt!
  delegatedShares: BigInt!
  rewardsShares: BigInt!

  delegations: [Delegation!]! @derivedFrom(field: "delegate")

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Community @entity {
  id: ID!
  st: StakeTogether!
  account: Account!

  address: Bytes!
  active: Boolean!

  delegates: [Delegation!]! @derivedFrom(field: "delegated")

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Delegation @entity {
  id: ID!
  st: StakeTogether!

  delegate: Account!
  delegated: Community!

  delegationShares: BigInt!

  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
